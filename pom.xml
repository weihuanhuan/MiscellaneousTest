<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jasonfitch.test</groupId>
    <artifactId>MiscellaneousTest</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>asm</module>
        <module>feature</module>
        <module>springmvc</module>
        <module>ear-demo-package</module>
        <module>ear-demo-app</module>
        <module>ear-demo-app-descriptor</module>
        <module>webejb-demo-app-local-descriptor</module>
        <module>javaagent</module>
        <module>internal-repo</module>
        <!--gmssl 工程需要特殊JDK编译，这里暂且不编译-->
        <!--<module>gmssl</module>-->
    </modules>

    <properties>

        <!-- checkstyle -->
        <plugin.checkstyle.version>3.1.1</plugin.checkstyle.version>
        <plugin.checkstyle.impl>9.3</plugin.checkstyle.impl>
<!--        <plugin.checkstyle.config>${project.root.basedir}/checkstyle/sun_checks_9.3.xml</plugin.checkstyle.config>-->
        <plugin.checkstyle.config>${project.root.basedir}/checkstyle/google_checks_9.3.xml</plugin.checkstyle.config>

        <!-- default skip, enable with -DskipCheckstyleReport=false -->
        <!-- default skip, enable with -DskipCheckstyleBuild=false -->
        <!-- mvn clean install site -DskipCheckstyleReport=false -DskipCheckstyleBuild=false -->
        <skipCheckstyleReport>true</skipCheckstyleReport>
        <skipCheckstyleBuild>true</skipCheckstyleBuild>

        <!-- 而对于这个变量maven是会使用的，用来处理源码的字符编码问题 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--注意单独在指定这里配置是无法对class编译版本生效的，这仅仅是相当于定了按个变量，maven是不会使用他们的
            对于独立的pom工程，需要使用 maven-compiler-plugin 插件来指定编译的版本，见本pom下面的插件配置
            对于全局的maven工程，需要在maven的 conf\setting.xml文件中配置，具体见maven配置
        -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>

        <!--feature springmvc-->
        <tomcat.dir.install>C:/apache-tomcat-8.5.37</tomcat.dir.install>
        <!--8.5.37 NamingContextListener 的 containerEvent() 被标记为 @Deprecated
            其方法体为 no-op,
            同时提及将在tomcat10中移除 NamingContextListener类 ContainerListener的接口和实现
        -->
        <tomcat.version>8.5.37</tomcat.version>
        <!--<tomcat.version>8.5.19</tomcat.version>-->
        <slf4j.version>1.7.25</slf4j.version>

        <!--feature-->
        <geronimo-transaction.version>3.1.3</geronimo-transaction.version>
        <xbean-reflect.version>3.18</xbean-reflect.version>
        <beanutils.version>1.9.3</beanutils.version>
        <dbcp2.version>2.5.0</dbcp2.version>
        <mysql.jdbc.version>5.1.24</mysql.jdbc.version>
        <derby.version>10.12.1.1</derby.version>
        <jsch.version>0.1.50</jsch.version>
        <jersey.version>2.27</jersey.version>
        <jedis.version>2.9.0</jedis.version>

        <log4j.version>2.11.1</log4j.version>
        <disruptor.version>3.4.2</disruptor.version>

        <asm.version>6.1.1</asm.version>
        <metadata-extractor.version>2.9.0</metadata-extractor.version>
        <httpclient.version>4.2.1</httpclient.version>

        <gson.version>2.8.5</gson.version>

        <commons-el.version>1.0</commons-el.version>
        <jstl-api.version>1.2</jstl-api.version>

        <!--springmvc-->
        <spring.version>5.1.7.RELEASE</spring.version>
        <!--<spring.version>3.1.0.RELEASE</spring.version>-->
        <spymemcached.version>2.12.3</spymemcached.version>
        <msm.version>2.1.1</msm.version>
        <jstl.version>1.2</jstl.version>
        <servlet-api.version>3.1.0</servlet-api.version>
        <ojdbc.version>11.1.0.6.0</ojdbc.version>

        <!--gmssl placeholder-->
        <bouncycastle.version>1.60</bouncycastle.version>

        <!-- urlrewritefilter -->
        <urlrewritefilter.version>3.2.0</urlrewritefilter.version>

        <!-- json-p -->
        <javax.json-api.version>1.1</javax.json-api.version>
        <org.glassfish-javax.json.version>1.1</org.glassfish-javax.json.version>

        <!-- serialize -->
        <caucho.hessian.version>4.0.65</caucho.hessian.version>

        <!-- oceanbase-client -->
        <oceanbase-client.version>1.1.10</oceanbase-client.version>

        <!-- junit -->
        <org.junit.junit-bom.version>5.7.1</org.junit.junit-bom.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${org.junit.junit-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>

            <!-- 只要 某个pom 将 本pom 声明为自己的 parent 元素，那么 本pom 中的插件以及属性在 子pom 中都是有效的  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-parent-project-lib</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--
                bugfix
                maven-site-plugin:3.3:site failed: A required class was missing while executing
                org.apache.maven.plugins:maven-site-plugin:3.3:site: org/apache/maven/doxia/siterenderer/DocumentContent
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <configuration>
                    <skip>${skipCheckstyleBuild}</skip>
                    <!--  这个配置是针对工程的相对目录的，所以相对路径是不生效的，我们可以使用 Inline Configuration 或者 内置配置 或者 插件依赖 来解决  -->
                    <configLocation>${plugin.checkstyle.config}</configLocation>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${plugin.checkstyle.impl}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
                <version>0.1</version>
                <executions>
                    <execution>
                        <id>directories</id>
                        <goals>
                            <goal>directory-of</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <property>project.root.basedir</property>
                            <project>
                                <groupId>com.jasonfitch.test</groupId>
                                <artifactId>MiscellaneousTest</artifactId>
                            </project>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>


    </build>

    <reporting>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.2.2</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                            <report>index</report>
                            <report>modules</report>
                            <report>plugin-management</report>
                            <report>plugins</report>
                            <report>summary</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!--
                You have to specify a plugin dependency on in the <build> element of your pom.xml.
                It will not work inside the <reporting> element, because <reporting> does not support plugin dependencies.

                但是这里自定义的 configLocation 的属性依旧是有意义的，因为他可以读取在 <build> 中的  maven-checkstyle-plugin 插件所引入的依赖
                而其内置的 checkstyle 版本可以在 maven-checkstyle-plugin 的 pom 中看见
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugin.checkstyle.version}</version>
                <configuration>
                    <skip>${skipCheckstyleReport}</skip>
                    <configLocation>${plugin.checkstyle.config}</configLocation>
                </configuration>
            </plugin>

        </plugins>
    </reporting>

</project>
